RootDir = "."

ConfigDir = "$RootDir$/Config"
DataDir   = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
#ModelDir  = "$OutputDir$/Models"

Name      = "resnet3"
DimIn     = 18772
DataFile  = "e:/tmp/Data/vcur20.txt"
CvDataFile  = "E:/tmp/value-mokusan-ladder2/test_0.txt"

TestDataFile  = "E:/tmp/value-mokusan-ladder2/test_0.txt"

AEpoch = 0


ModelDir  =  "$OutputDir$/$Name$"

deviceId = 0
imageLayout = "cudnn"
# override the above as follows when running on CPU:
# deviceId = -1
# imageLayout = "legacy"
traceLevel = 1
#traceLevel = 2

#command = train:CreateEvalModel:test
command = train

precision = "float"
modelPath = "$ModelDir$/Conv"
ndlMacros = "$ConfigDir$/Macros.ndl"

# uncomment the following line to write logs to a file
#stderr    = "$OutputDir$/$Name$"
stderr    = "$OutputDir$/$Name$_$command$.log"

parallelTrain = false

#  LOAD MODEL                    #
LoadTrainModel = [
    action = edit
    CurModel=$ModelDir$/Pre
    NewModel=$ModelDir$/Conv.0
    editPath=$ConfigDir$/Load.mel
]

#######################################
#  TRAINING CONFIG                    #
#######################################

train = [
    action = "train"

    NDLNetworkBuilder = [
        networkDescription = "$ConfigDir$/$Name$.ndl"
    ]

    SGD = [
        epochSize =  256000
        minibatchSize = 64

        #learningRatesPerMB=0.001*10:0.01*40:0.004
        learningRatesPerMB=0.0004

        #momentumPerMB = 0*10:0.5
        momentumPerMB = 0.9
        #momentumPerMB = 0
        L2RegWeight=0.0005
        dropoutRate=0*2:0.5

        maxEpochs = 100000
        #maxEpochs = 16
        numMBsToShowResult = 100
        #gradUpdateType = FSAdaGrad
        gradUpdateType = None
        # None AdaGrad RmsProp FSAdaGrad
        keepCheckPointFiles = true

        AutoAdjust=[
            # auto learning rate adjustment
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0.1
            #continueReduce=true
        #   #increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
        #   #learnRateIncreaseFactor=1.382
        #   numMiniBatch4LRSearch=100
        #   #numBestSearchEpoch=500
            learnRateAdjustInterval = 50
        ]

        ParallelTrain = [
            #parallelizationMethod = "DataParallelSGD"
            parallelizationMethod = "ModelAveragingSGD"
            distributedMBReading = "true"
            parallelizationStartEpoch = 1
            #syncPerfStats = 1
            DataParallelSGD = [
                gradientBits = 1
                #useBufferedAsyncGradientAggregation = true
            ]
            ModelAveragingSGD = [
                #syncFrequencyInFrames = 80000
            ]
        ]
    ]

    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataFile$"
        randomize = false
#       miniBatchMode=Full
        traceLevel = 1
        keepDataInMemory = false

        input = [
            features = [
                dim = $DimIn$
                format = "sparse"
            ]
            move = [
                dim = 361
                format = "sparse"
            ]
            win = [
                dim = 1
                format = "dense"
            ]
            statistic = [
                dim = 361
                format = "dense"
            ]
        ]
    ]

    cvReader = [
        readerType = "CNTKTextFormatReader"
        file = "$CvDataFile$"
        randomize = false
        traceLevel = 1
        keepDataInMemory = false

        input = [
            features = [
                dim = $DimIn$
                format = "sparse"
            ]
            move = [
                dim = 361
                format = "sparse"
            ]
            win = [
                dim = 1
                format = "dense"
            ]
            statistic = [
                dim = 361
                format = "dense"
            ]
        ]
    ]
]

#######################################
#  TEST CONFIG                        #
#######################################

test = [
    action = "eval"
    minibatchSize = 64
    maxEpochs=1
    #epochSize = 2560000

    modelPath=$ModelDir$/Conv.$AEpoch$

    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$TestDataFile$"
        randomize = false
        #miniBatchMode=Full
        traceLevel = 1

        input = [
            features = [
                dim = $DimIn$
                format = "sparse"
            ]
            move = [
                dim = 361
                format = "sparse"
            ]
            win = [
                dim = 1
                format = "dense"
            ]
            statistic = [
                dim = 361
                format = "dense"
            ]
        ]
    ]
]

# dump parameter values
dump = [
    action = "dumpNode"
    printValues = true
    modelPath=$ModelDir$/Conv.$AEpoch$
]

plot = [
    action = "plot"
    modelPath=$ModelDir$/Conv.0

    # outputdotFile specifies the dot file to output
    # if the user does not specify this, it will be ${modelPath}.dot
    outputdotFile = "$OutputDir$/$Name$.dot"

    # if RenderCmd is specified, CNTK will call the plot command after replacing
    # <IN> with ${outputdotFile} and <OUT> with ${outputfile}
    #outputFile="$OutputDir$/$Name$.svg"
    #renderCmd="d:\programs\Graphviz2.38\bin\dot.exe -Tsvg <IN> -o<OUT>"
    outputFile="$OutputDir$/$Name$.png"
    renderCmd="d:\programs\Graphviz2.38\bin\dot.exe -Tpng <IN> -o<OUT>"
]

edit = [
    action = edit
    CurModel=$ModelDir$/Pre
    NewModel=$ModelDir$/Conv.0
    editPath=$ConfigDir$/$Name$.mel
]
