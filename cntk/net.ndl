# macros to include
load = ndlMnistMacros

# the actual NDL that defines the network
run = DNN

ndlMnistMacros = [
    imageW = 19
    imageH = 19
	imageC = 8
    labelDim = 361

    features = ImageInput(imageW, imageH, imageC, tag = feature, imageLayout=$imageLayout$)
    labels = Input(labelDim, tag = label)

    scValue = 1
    expAvg = 1024
    
    convWScale = 1
    convBValue = 0
]

DNN = [
	# dist = ImageParameter(361, 1, 1, init = fromFile, initFromFilePath = "$ConfigDir$/distance_.txt", learningRateMultiplier = 0)
	# #features_0 = Reshape(features, 5415, imageWidth=361, imageHeight=1, imageChannels=15, imageLayout=$imageLayout$)
	# features_0 = Reshape(features, 5415, imageChannels=361, imageWidth=15, imageHeight=1, imageLayout="legacy")
	# features_1 = Transpose(features_0)
	# #dist = Reshape(dist0, 361, imageWidth=19, imageHeight=1, imageChannels=19, imageLayout=$imageLayout$)
	# features_2 = RowStack(features_1, dist)
	# features_3 = Transpose(features_2)
	# features2 = Reshape(features_3, 5776, imageWidth=19, imageHeight=19, imageChannels=16, imageLayout=$imageLayout$)
# conv1
    kW1 = 5
    kH1 = 5
    cMap1 = 64
    cMap1x9 = 576
    stride1 = 1
    # weight[cMap1, kW1 * kH1 * inputChannels]
	conv1 = ConvBNReLULayer(features, cMap1, 200, kW1, kH1, stride1, stride1, convWScale, convBValue, scValue, expAvg)
	rn_1  = ResNetNode2(conv1, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_2  = ResNetNode2(rn_1, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_3  = ResNetNode2(rn_2, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_4  = ResNetNode2(rn_3, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_5  = ResNetNode2(rn_4, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_6  = ResNetNode2(rn_5, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_7  = ResNetNode2(rn_6, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_8  = ResNetNode2(rn_7, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_9  = ResNetNode2(rn_8, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_10 = ResNetNode2(rn_9, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_11 = ResNetNode2(rn_10,cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_12 = ResNetNode2(rn_11,cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_13 = ResNetNode2(rn_12,cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_14 = ResNetNode2(rn_13,cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_15 = ResNetNode2(rn_14,cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_16 = ResNetNode2(rn_15,cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_17 = ResNetNode2(rn_16,cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_18 = ResNetNode2(rn_17,cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn_19 = ResNetNode2(rn_18,cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)
	rn    = ResNetNode2(rn_19, cMap1, cMap1, cMap1x9, convWScale, convBValue, scValue, expAvg)

    kWL = 3
    kHL = 3
	conv = ConvBNReLULayer(rn, cMap1, cMap1x9, kWL, kHL, stride1, stride1, convWScale, convBValue, scValue, expAvg)
    strideL = 1
	convX = ConvBNLayer(conv, 1, cMap1x9, kWL, kHL, strideL, strideL, convWScale, convBValue, scValue, expAvg)
	ol = Reshape(convX, 361, numChannels=361, imageWidth=1, imageHeight=1)
	#ol0 = Plus(rs, convB)
	#ol0 = FlattenDimensions(conv, 361, 1)
    #convB = Parameter(361, 1, init="uniform")
	#rs = Times(convT, Reshape(conv, 1))
    #ol0 = Plus(rs, convB)
	#ol = RowStack(ol0, Const(0))

	#labels0 = RowSlice(0, 361, labels)
    ce = CrossEntropyWithSoftmax(labels, ol)
    err = ErrorPrediction(labels, ol)
    
    # Special Nodes
    FeatureNodes = (features)
    LabelNodes = (labels)
    CriterionNodes = (ce)
    EvalNodes = (err)
    OutputNodes = (ol)
]

